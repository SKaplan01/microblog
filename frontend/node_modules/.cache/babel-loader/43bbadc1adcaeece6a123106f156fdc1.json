{"ast":null,"code":"import _classCallCheck from \"/Users/sherlock/Desktop/react_microblog/microblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sherlock/Desktop/react_microblog/microblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sherlock/Desktop/react_microblog/microblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sherlock/Desktop/react_microblog/microblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sherlock/Desktop/react_microblog/microblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sherlock/Desktop/react_microblog/microblog/src/Containers/FormContainer.js\";\nimport React, { Component } from 'react';\nimport BlogForm from '../Components/BlogForm';\nimport { connect } from 'react-redux';\nimport { addPost, editPost } from '../actionCreators';\n\nvar FormContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormContainer, _Component);\n\n  function FormContainer() {\n    _classCallCheck(this, FormContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormContainer).apply(this, arguments));\n  }\n\n  _createClass(FormContainer, [{\n    key: \"handleCancel\",\n    value: function handleCancel() {\n      redirect;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      this.props.isEdit ? this.props.editPost() : this.props.addPost();\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(BlogForm, {\n        post: this.props.post,\n        submit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FormContainer;\n}(Component);\n\nfunction mapStateToProps(reduxState) {\n  var post;\n\n  if (this.props) {\n    post = reduxState.posts[this.props.match.params.postid];\n  }\n\n  return {\n    post: post\n  };\n}\n\nvar connectToReduxStore = connect(mapStateToProps, {\n  addPost: addPost,\n  editPost: editPost\n});\nexport default connectToReduxStore(FormContainer);","map":{"version":3,"sources":["/Users/sherlock/Desktop/react_microblog/microblog/src/Containers/FormContainer.js"],"names":["React","Component","BlogForm","connect","addPost","editPost","FormContainer","redirect","props","isEdit","history","push","post","handleSubmit","mapStateToProps","reduxState","posts","match","params","postid","connectToReduxStore"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,mBAAlC;;IAEMC,a;;;;;;;;;;;;;mCACW;AACbC,MAAAA,QAAQ;AACT;;;mCAEc;AACb,WAAKC,KAAL,CAAWC,MAAX,GAAoB,KAAKD,KAAL,CAAWH,QAAX,EAApB,GAA4C,KAAKG,KAAL,CAAWJ,OAAX,EAA5C;AACA,WAAKI,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAA3B;AAAiC,QAAA,MAAM,EAAE,KAAKC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAhByBZ,S;;AAmB5B,SAASa,eAAT,CAAyBC,UAAzB,EAAqC;AACnC,MAAIH,IAAJ;;AACA,MAAI,KAAKJ,KAAT,EAAgB;AACdI,IAAAA,IAAI,GAAGG,UAAU,CAACC,KAAX,CAAiB,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,MAAzC,CAAP;AACD;;AACD,SAAO;AACLP,IAAAA,IAAI,EAAJA;AADK,GAAP;AAGD;;AAED,IAAMQ,mBAAmB,GAAGjB,OAAO,CACjCW,eADiC,EAEjC;AAAEV,EAAAA,OAAO,EAAPA,OAAF;AAAWC,EAAAA,QAAQ,EAARA;AAAX,CAFiC,CAAnC;AAKA,eAAee,mBAAmB,CAACd,aAAD,CAAlC","sourcesContent":["import React, { Component } from 'react';\nimport BlogForm from '../Components/BlogForm';\nimport { connect } from 'react-redux';\nimport { addPost, editPost } from '../actionCreators';\n\nclass FormContainer extends Component {\n  handleCancel() {\n    redirect;\n  }\n\n  handleSubmit() {\n    this.props.isEdit ? this.props.editPost() : this.props.addPost();\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div>\n        <BlogForm post={this.props.post} submit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(reduxState) {\n  let post;\n  if (this.props) {\n    post = reduxState.posts[this.props.match.params.postid];\n  }\n  return {\n    post\n  };\n}\n\nconst connectToReduxStore = connect(\n  mapStateToProps,\n  { addPost, editPost }\n);\n\nexport default connectToReduxStore(FormContainer);\n"]},"metadata":{},"sourceType":"module"}