{"ast":null,"code":"import _classCallCheck from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/src/Components/CommentList.js\";\nimport React, { Component } from 'react';\nimport uuid from 'uuid/v4';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap'; //Displays a list of comments associated with the parent Post\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentList, _Component);\n\n  function CommentList(props) {\n    var _this;\n\n    _classCallCheck(this, CommentList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentList).call(this, props));\n    _this.state = {\n      comment: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentList, [{\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState({\n        comment: evt.target.value\n      });\n    } //calls addComment (a prop from Post) to update comments for this post\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(evt) {\n      evt.preventDefault();\n      var comment = {\n        text: this.state.comment,\n        id: uuid()\n      };\n      this.props.addComment(comment, this.props.postId);\n      this.setState({\n        comment: ''\n      });\n    } //calls deleteComment (prop from Post) with id for this comment and id for this post\n    //evt.target.dataset.id comes from data-id attribute in button\n\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(evt) {\n      evt.preventDefault();\n      this.props.deleteComment(this.props.postId, evt.target.dataset.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        margin: '25px',\n        fontFamily: 'archivo'\n      };\n      var formStyle = {\n        height: '50px',\n        margin: '-25px'\n      };\n      var buttonStyle = {\n        margin: '5px',\n        padding: '5px',\n        height: '30px',\n        width: '100px'\n      };\n      var commentStyle = {\n        margin: '-25px',\n        padding: '10px'\n      };\n      var comments; //if post has comments, create li element for each comment\n\n      if (this.props.comments) {\n        comments = Object.keys(this.props.comments).map(function (key) {\n          return React.createElement(\"li\", {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(Button, {\n            \"data-id\": key,\n            onClick: _this2.handleDelete,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \"X\"), _this2.props.comments[key]);\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        style: commentStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, comments ? comments : ''), React.createElement(Form, {\n        style: formStyle,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"comment\",\n        value: this.state.comment,\n        placeholder: \"New comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: buttonStyle,\n        outline: true,\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return CommentList;\n}(Component);\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/src/Components/CommentList.js"],"names":["React","Component","uuid","Form","FormGroup","Label","Input","Button","CommentList","props","state","comment","handleChange","bind","handleSubmit","handleDelete","evt","setState","target","value","preventDefault","text","id","addComment","postId","deleteComment","dataset","style","margin","fontFamily","formStyle","height","buttonStyle","padding","width","commentStyle","comments","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid/v4';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\n//Displays a list of comments associated with the parent Post\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { comment: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ comment: evt.target.value });\n  }\n\n  //calls addComment (a prop from Post) to update comments for this post\n  handleSubmit(evt) {\n    evt.preventDefault();\n    let comment = { text: this.state.comment, id: uuid() };\n    this.props.addComment(comment, this.props.postId);\n    this.setState({ comment: '' });\n  }\n\n  //calls deleteComment (prop from Post) with id for this comment and id for this post\n  //evt.target.dataset.id comes from data-id attribute in button\n  handleDelete(evt) {\n    evt.preventDefault();\n    this.props.deleteComment(this.props.postId, evt.target.dataset.id);\n  }\n\n  render() {\n    const style = {\n      margin: '25px',\n      fontFamily: 'archivo'\n    };\n\n    const formStyle = {\n      height: '50px',\n      margin: '-25px'\n    };\n\n    const buttonStyle = {\n      margin: '5px',\n      padding: '5px',\n      height: '30px',\n      width: '100px'\n    };\n\n    const commentStyle = {\n      margin: '-25px',\n      padding: '10px'\n    };\n\n    let comments;\n    //if post has comments, create li element for each comment\n    if (this.props.comments) {\n      comments = Object.keys(this.props.comments).map(key => {\n        return (\n          <li key={key}>\n            <Button data-id={key} onClick={this.handleDelete}>\n              X\n            </Button>\n            {this.props.comments[key]}\n          </li>\n        );\n      });\n    }\n\n    return (\n      <div style={style}>\n        <ul style={commentStyle}>{comments ? comments : ''}</ul>\n        <Form style={formStyle} onSubmit={this.handleSubmit}>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"comment\"\n            value={this.state.comment}\n            placeholder=\"New comment\"\n          />\n          <Button style={buttonStyle} outline color=\"success\">\n            Add\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}