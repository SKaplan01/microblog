{"ast":null,"code":"import _toConsumableArray from \"/Users/sherlock/Desktop/react_microblog/microblog/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/sherlock/Desktop/react_microblog/microblog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_COMMENT, DELETE_COMMENT, ADD_POST, EDIT_POST, DELETE_POST } from './actionTypes';\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('reducer ran; state & action:', state, action);\n\n  switch (action.type) {\n    case ADD_POST:\n      var id = uuid();\n      post.id = id;\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n      post.id = uuid();\n      post.comments = [];\n      this.setState(function (st) {\n        return {\n          posts: _toConsumableArray(st.posts).concat([post])\n        };\n      });\n\n    case EDIT_POST:\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    case ADD_COMMENT:\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    case DELETE_COMMENT:\n      return _objectSpread({}, state, {\n        count: state.count - 1\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/sherlock/Desktop/react_microblog/microblog/src/rootReducer.js"],"names":["ADD_COMMENT","DELETE_COMMENT","ADD_POST","EDIT_POST","DELETE_POST","rootReducer","state","action","console","log","type","id","uuid","post","count","comments","setState","st","posts"],"mappings":";;AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,WALF,QAMO,eANP;;AAQA,SAASC,WAAT,GAAyC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,KAA5C,EAAmDC,MAAnD;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKR,QAAL;AACE,UAAIS,EAAE,GAAGC,IAAI,EAAb;AACAC,MAAAA,IAAI,CAACF,EAAL,GAAUA,EAAV;AACA,+BAAYL,KAAZ;AAAmBQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AAAxC;AACAD,MAAAA,IAAI,CAACF,EAAL,GAAUC,IAAI,EAAd;AACAC,MAAAA,IAAI,CAACE,QAAL,GAAgB,EAAhB;AACA,WAAKC,QAAL,CAAc,UAAAC,EAAE;AAAA,eAAK;AAAEC,UAAAA,KAAK,qBAAMD,EAAE,CAACC,KAAT,UAAgBL,IAAhB;AAAP,SAAL;AAAA,OAAhB;;AAEF,SAAKV,SAAL;AACE,+BAAYG,KAAZ;AAAmBQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AAAxC;;AAEF,SAAKV,WAAL;AACE,+BAAYE,KAAZ;AAAmBQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AAAxC;;AAEF,SAAKd,WAAL;AACE,+BAAYM,KAAZ;AAAmBQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AAAxC;;AAEF,SAAKb,cAAL;AACE,+BAAYK,KAAZ;AAAmBQ,QAAAA,KAAK,EAAER,KAAK,CAACQ,KAAN,GAAc;AAAxC;;AAEF;AACE,aAAOR,KAAP;AAtBJ;AAwBD;;AAED,eAAeD,WAAf","sourcesContent":["import {\n  ADD_COMMENT,\n  DELETE_COMMENT,\n  ADD_POST,\n  EDIT_POST,\n  DELETE_POST\n} from './actionTypes';\n\nfunction rootReducer(state = {}, action) {\n  console.log('reducer ran; state & action:', state, action);\n\n  switch (action.type) {\n    case ADD_POST:\n      let id = uuid();\n      post.id = id;\n      return { ...state, count: state.count + 1 };\n      post.id = uuid();\n      post.comments = [];\n      this.setState(st => ({ posts: [...st.posts, post] }));\n\n    case EDIT_POST:\n      return { ...state, count: state.count - 1 };\n\n    case DELETE_POST:\n      return { ...state, count: state.count - 1 };\n\n    case ADD_COMMENT:\n      return { ...state, count: state.count - 1 };\n\n    case DELETE_COMMENT:\n      return { ...state, count: state.count - 1 };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}