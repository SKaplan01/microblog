{"ast":null,"code":"import _classCallCheck from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/src/Containers/PostList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, CardTitle, CardGroup, CardSubtitle, CardBody } from 'reactstrap';\nimport { getTitlesFromApi, addVote } from '../actionCreators';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport './PostList.css'; //Render a list of cards which contain post data, link to specific posts.\n\nvar PostList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostList, _Component);\n\n  function PostList(props) {\n    _classCallCheck(this, PostList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostList).call(this, props));\n  } //loads title, description and votes from API\n  //(component will then get new props from mapStateToProps)\n\n\n  _createClass(PostList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getTitlesFromApi();\n    }\n  }, {\n    key: \"handleVote\",\n    value: function handleVote(evt) {\n      this.props.addVote(evt.target.dataset.id, evt.target.direction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var style = {\n        marginLeft: '-25px',\n        marginTop: '10px'\n      };\n      var postCards;\n\n      if (this.props.posts) {\n        var posts = this.props.posts;\n        postCards = posts.map(function (post) {\n          return React.createElement(Card, {\n            key: post.id,\n            className: \"postCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/\".concat(post.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, ' ', React.createElement(CardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, post.title)), React.createElement(CardSubtitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, post.description), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }), React.createElement(CardSubtitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, \"Votes: \", post.votes), React.createElement(FontAwesomeIcon, {\n            \"data-id\": post.id,\n            onClick: _this.handleVote,\n            icon: faThumbsUp,\n            direction: \"up\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }), React.createElement(FontAwesomeIcon, {\n            \"data-id\": post.id,\n            onClick: _this.handleVote,\n            icon: faThumbsDown,\n            direction: \"down\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          })));\n        });\n      }\n\n      return React.createElement(CardGroup, {\n        style: style,\n        className: \"cardGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, postCards);\n    }\n  }]);\n\n  return PostList;\n}(Component);\n\nfunction mapStateToProps(reduxState) {\n  return {\n    posts: reduxState.titles\n  };\n}\n\nvar connectToReduxStore = connect(mapStateToProps, {\n  getTitlesFromApi: getTitlesFromApi,\n  addVote: addVote\n});\nexport default connectToReduxStore(PostList);","map":{"version":3,"sources":["/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/src/Containers/PostList.js"],"names":["React","Component","Link","connect","Card","CardTitle","CardGroup","CardSubtitle","CardBody","getTitlesFromApi","addVote","FontAwesomeIcon","faThumbsUp","faThumbsDown","PostList","props","evt","target","dataset","id","direction","style","marginLeft","marginTop","postCards","posts","map","post","title","description","votes","handleVote","mapStateToProps","reduxState","titles","connectToReduxStore"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, CardTitle, CardGroup, CardSubtitle, CardBody } from 'reactstrap';\nimport { getTitlesFromApi, addVote } from '../actionCreators';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport './PostList.css';\n\n//Render a list of cards which contain post data, link to specific posts.\nclass PostList extends Component {\n   constructor(props){\n     super(props)\n   }\n  //loads title, description and votes from API\n  //(component will then get new props from mapStateToProps)\n  componentDidMount() {\n    this.props.getTitlesFromApi();\n  }\n\n  handleVote(evt) {\n    this.props.addVote(evt.target.dataset.id, evt.target.direction);\n  }\n\n  render() {\n    const style = {\n      marginLeft: '-25px',\n      marginTop: '10px'\n    };\n\n    let postCards;\n    if (this.props.posts) {\n      let { posts } = this.props;\n      postCards = posts.map(post => {\n        return (\n          <Card key={post.id} className=\"postCard\">\n            <CardBody>\n              <Link to={`/${post.id}`}>\n                {' '}\n                <CardTitle>{post.title}</CardTitle>\n              </Link>\n              <CardSubtitle>{post.description}</CardSubtitle>\n              <p />\n              <CardSubtitle>Votes: {post.votes}</CardSubtitle>\n              <FontAwesomeIcon\n                data-id={post.id}\n                onClick={this.handleVote}\n                icon={faThumbsUp}\n                direction=\"up\"\n              />\n              <FontAwesomeIcon\n                data-id={post.id}\n                onClick={this.handleVote}\n                icon={faThumbsDown}\n                direction=\"down\"\n              />\n            </CardBody>\n          </Card>\n        );\n      });\n    }\n\n    return (\n      <CardGroup style={style} className=\"cardGroup\">\n        {postCards}\n      </CardGroup>\n    );\n  }\n}\n\nfunction mapStateToProps(reduxState) {\n  return {\n    posts: reduxState.titles\n  };\n}\n\nconst connectToReduxStore = connect(\n  mapStateToProps,\n  { getTitlesFromApi, addVote }\n);\n\nexport default connectToReduxStore(PostList);\n"]},"metadata":{},"sourceType":"module"}