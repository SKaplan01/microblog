{"ast":null,"code":"import _classCallCheck from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/src/Containers/Post.js\";\nimport React, { Component } from 'react';\nimport CommentList from '../Components/CommentList';\nimport NotFound from '../Components/NotFound';\nimport { connect } from 'react-redux';\nimport { deletePostFromApi, addCommentApi, deleteCommentApi, getOnePostFromApi, addVote } from '../actionCreators';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'reactstrap'; //Actual post => displays title, description and body\n//Can edit and remove post\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post).call(this, props));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.vote = _this.vote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //When component mounts dispatch function to get data for that specific post\n\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getOnePostFromApi(this.props.match.params.postid);\n    } //Takes id as parameter, calls function passed from Redux => redirect to homepage\n\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete() {\n      this.props.deletePostFromApi(this.props.post.id);\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"vote\",\n    value: function vote(evt) {\n      console.log(evt.target.dataset);\n      this.props.addVote(this.props.post.id, evt.target.dataset.id);\n    } //If post with this id doesn't exist, redirect to NotFound page\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        margin: '25px',\n        fontFamily: 'archivo',\n        padding: '10px',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexDirection: 'column'\n      };\n      var buttonDiv = {\n        display: 'flex',\n        flex: '1',\n        flexDirection: 'row'\n      };\n      var buttonStyle = {\n        margin: '2px',\n        padding: '5px',\n        width: '75px'\n      };\n\n      if (!this.props.post) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.props.post.title), React.createElement(\"div\", {\n        style: buttonDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: buttonStyle,\n        outline: true,\n        color: \"primary\" //redirect to edit form\n        ,\n        onClick: function onClick() {\n          return _this2.props.history.push(\"/edit/\".concat(_this2.props.post.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Button, {\n        style: buttonStyle,\n        outline: true,\n        color: \"danger\",\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Delete\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.props.post.description)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.post.body), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Votes: \", this.props.post.votes), React.createElement(FontAwesomeIcon, {\n        onClick: this.vote(this.props.post.id, 'up'),\n        icon: faThumbsUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(FontAwesomeIcon, {\n        onClick: this.vote(this.props.post.id, 'down'),\n        icon: faThumbsDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(CommentList, {\n        addComment: this.props.addCommentApi,\n        deleteComment: this.props.deleteCommentApi,\n        comments: this.props.post.comments,\n        postId: this.props.post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Post;\n}(Component); //find post from redux store using url param\n\n\nfunction mapStateToProps(reduxState, ownProps) {\n  return {\n    post: reduxState.posts[ownProps.match.params.postid]\n  };\n}\n\nvar connectToReduxStore = connect(mapStateToProps, {\n  deletePostFromApi: deletePostFromApi,\n  addCommentApi: addCommentApi,\n  deleteCommentApi: deleteCommentApi,\n  getOnePostFromApi: getOnePostFromApi,\n  addVote: addVote\n});\nexport default connectToReduxStore(Post);","map":{"version":3,"sources":["/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/src/Containers/Post.js"],"names":["React","Component","CommentList","NotFound","connect","deletePostFromApi","addCommentApi","deleteCommentApi","getOnePostFromApi","addVote","FontAwesomeIcon","faThumbsUp","faThumbsDown","Button","Post","props","handleDelete","bind","vote","match","params","postid","post","id","history","push","evt","console","log","target","dataset","style","margin","fontFamily","padding","display","justifyContent","flexDirection","buttonDiv","flex","buttonStyle","width","title","description","body","votes","comments","mapStateToProps","reduxState","ownProps","posts","connectToReduxStore"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CommentList from '../Components/CommentList';\nimport NotFound from '../Components/NotFound';\nimport { connect } from 'react-redux';\nimport {\n  deletePostFromApi,\n  addCommentApi,\n  deleteCommentApi,\n  getOnePostFromApi,\n  addVote\n} from '../actionCreators';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'reactstrap';\n\n//Actual post => displays title, description and body\n//Can edit and remove post\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  //When component mounts dispatch function to get data for that specific post\n  componentDidMount() {\n    this.props.getOnePostFromApi(this.props.match.params.postid);\n  }\n\n  //Takes id as parameter, calls function passed from Redux => redirect to homepage\n  handleDelete() {\n    this.props.deletePostFromApi(this.props.post.id);\n    this.props.history.push('/');\n  }\n\n  vote(evt) {\n    console.log(evt.target.dataset);\n    this.props.addVote(this.props.post.id, evt.target.dataset.id);\n  }\n\n  //If post with this id doesn't exist, redirect to NotFound page\n  render() {\n    const style = {\n      margin: '25px',\n      fontFamily: 'archivo',\n      padding: '10px',\n      display: 'flex',\n      justifyContent: 'space-around',\n      flexDirection: 'column'\n    };\n\n    const buttonDiv = {\n      display: 'flex',\n      flex: '1',\n      flexDirection: 'row'\n    };\n\n    const buttonStyle = {\n      margin: '2px',\n      padding: '5px',\n      width: '75px'\n    };\n\n    if (!this.props.post) {\n      return <NotFound />;\n    }\n    return (\n      <div style={style}>\n        <h1>{this.props.post.title}</h1>\n        <div style={buttonDiv}>\n          <Button\n            style={buttonStyle}\n            outline\n            color=\"primary\"\n            //redirect to edit form\n            onClick={() =>\n              this.props.history.push(`/edit/${this.props.post.id}`)\n            }\n          >\n            Edit\n          </Button>\n          <Button\n            style={buttonStyle}\n            outline\n            color=\"danger\"\n            onClick={this.handleDelete}\n          >\n            Delete\n          </Button>\n        </div>\n        <br />\n        <h4>\n          <i>{this.props.post.description}</i>\n        </h4>\n        <p>{this.props.post.body}</p>\n        <br />\n        <b>Votes: {this.props.post.votes}</b>\n        <FontAwesomeIcon\n          onClick={this.vote(this.props.post.id, 'up')}\n          icon={faThumbsUp}\n        />\n        <FontAwesomeIcon\n          onClick={this.vote(this.props.post.id, 'down')}\n          icon={faThumbsDown}\n        />\n        <CommentList\n          addComment={this.props.addCommentApi}\n          deleteComment={this.props.deleteCommentApi}\n          comments={this.props.post.comments}\n          postId={this.props.post.id}\n        />\n      </div>\n    );\n  }\n}\n\n//find post from redux store using url param\nfunction mapStateToProps(reduxState, ownProps) {\n  return {\n    post: reduxState.posts[ownProps.match.params.postid]\n  };\n}\n\nconst connectToReduxStore = connect(\n  mapStateToProps,\n  {\n    deletePostFromApi,\n    addCommentApi,\n    deleteCommentApi,\n    getOnePostFromApi,\n    addVote\n  }\n);\n\nexport default connectToReduxStore(Post);\n"]},"metadata":{},"sourceType":"module"}