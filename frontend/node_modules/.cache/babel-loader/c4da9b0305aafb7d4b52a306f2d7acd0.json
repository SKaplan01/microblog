{"ast":null,"code":"import _classCallCheck from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/src/Containers/PostList.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, CardTitle, CardGroup, CardSubtitle, CardBody } from 'reactstrap';\nimport { getTitlesFromApi } from '../actionCreators';\nimport './PostList.css'; //Render a list of cards which contain post data, link to specific posts.\n\nvar PostList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostList, _Component);\n\n  function PostList() {\n    _classCallCheck(this, PostList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostList).apply(this, arguments));\n  }\n\n  _createClass(PostList, [{\n    key: \"componentDidMount\",\n    //loads title, description and votes from API\n    //(component will then get new props from mapStateToProps)\n    value: function componentDidMount() {\n      this.props.getTitlesFromApi();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = {\n        marginLeft: '-25px',\n        marginTop: '10px'\n      };\n      var postCards;\n\n      if (this.props.posts) {\n        var posts = this.props.posts;\n        postCards = Object.keys(this.props.posts).map(function (postId) {\n          return React.createElement(Card, {\n            key: postId,\n            className: \"postCard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(CardBody, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/\".concat(postId),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, ' ', React.createElement(CardTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, posts[postId].postTitle)), React.createElement(CardSubtitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, posts[postId].postDescription)));\n        });\n      }\n\n      return React.createElement(CardGroup, {\n        style: style,\n        className: \"cardGroup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, postCards);\n    }\n  }]);\n\n  return PostList;\n}(Component);\n\nfunction mapStateToProps(reduxState) {\n  return {\n    posts: reduxState.posts\n  };\n}\n\nvar connectToReduxStore = connect(mapStateToProps, {\n  getTitlesFromApi: getTitlesFromApi\n});\nexport default connectToReduxStore(PostList);","map":{"version":3,"sources":["/Users/sherlock/Desktop/microblog-stuff/microblog/frontend/src/Containers/PostList.js"],"names":["React","Component","Link","connect","Card","CardTitle","CardGroup","CardSubtitle","CardBody","getTitlesFromApi","PostList","props","style","marginLeft","marginTop","postCards","posts","Object","keys","map","postId","postTitle","postDescription","mapStateToProps","reduxState","connectToReduxStore"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,YAArC,EAAmDC,QAAnD,QAAmE,YAAnE;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAO,gBAAP,C,CAEA;;IACMC,Q;;;;;;;;;;;;;AACJ;AACA;wCACoB;AAClB,WAAKC,KAAL,CAAWF,gBAAX;AACD;;;6BAEQ;AACP,UAAMG,KAAK,GAAG;AACZC,QAAAA,UAAU,EAAE,OADA;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAKA,UAAIC,SAAJ;;AACA,UAAI,KAAKJ,KAAL,CAAWK,KAAf,EAAsB;AAAA,YACdA,KADc,GACJ,KAAKL,KADD,CACdK,KADc;AAEpBD,QAAAA,SAAS,GAAGE,MAAM,CAACC,IAAP,CAAY,KAAKP,KAAL,CAAWK,KAAvB,EAA8BG,GAA9B,CAAkC,UAAAC,MAAM,EAAI;AACtD,iBACE,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAEA,MAAX;AAAmB,YAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,EAAE,aAAMA,MAAN,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,GADH,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAYJ,KAAK,CAACI,MAAD,CAAL,CAAcC,SAA1B,CAFF,CADF,EAKE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAeL,KAAK,CAACI,MAAD,CAAL,CAAcE,eAA7B,CALF,CADF,CADF;AAWD,SAZW,CAAZ;AAaD;;AAED,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEV,KAAlB;AAAyB,QAAA,SAAS,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,SADH,CADF;AAKD;;;;EApCoBd,S;;AAuCvB,SAASsB,eAAT,CAAyBC,UAAzB,EAAqC;AACnC,SAAO;AACLR,IAAAA,KAAK,EAAEQ,UAAU,CAACR;AADb,GAAP;AAGD;;AAED,IAAMS,mBAAmB,GAAGtB,OAAO,CACjCoB,eADiC,EAEjC;AAAEd,EAAAA,gBAAgB,EAAhBA;AAAF,CAFiC,CAAnC;AAKA,eAAegB,mBAAmB,CAACf,QAAD,CAAlC","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Card, CardTitle, CardGroup, CardSubtitle, CardBody } from 'reactstrap';\nimport { getTitlesFromApi } from '../actionCreators';\nimport './PostList.css';\n\n//Render a list of cards which contain post data, link to specific posts.\nclass PostList extends Component {\n  //loads title, description and votes from API\n  //(component will then get new props from mapStateToProps)\n  componentDidMount() {\n    this.props.getTitlesFromApi();\n  }\n\n  render() {\n    const style = {\n      marginLeft: '-25px',\n      marginTop: '10px'\n    };\n\n    let postCards;\n    if (this.props.posts) {\n      let { posts } = this.props;\n      postCards = Object.keys(this.props.posts).map(postId => {\n        return (\n          <Card key={postId} className=\"postCard\">\n            <CardBody>\n              <Link to={`/${postId}`}>\n                {' '}\n                <CardTitle>{posts[postId].postTitle}</CardTitle>\n              </Link>\n              <CardSubtitle>{posts[postId].postDescription}</CardSubtitle>\n            </CardBody>\n          </Card>\n        );\n      });\n    }\n\n    return (\n      <CardGroup style={style} className=\"cardGroup\">\n        {postCards}\n      </CardGroup>\n    );\n  }\n}\n\nfunction mapStateToProps(reduxState) {\n  return {\n    posts: reduxState.posts\n  };\n}\n\nconst connectToReduxStore = connect(\n  mapStateToProps,\n  { getTitlesFromApi }\n);\n\nexport default connectToReduxStore(PostList);\n"]},"metadata":{},"sourceType":"module"}