{"ast":null,"code":"import _classCallCheck from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/Post.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CommentList from './CommentList'; //Actual post => displays title, description and body\n//Can edit and remove post\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post).call(this, props));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Takes id as parameter, calls function passed down from App => redirect to homepage\n\n\n  _createClass(Post, [{\n    key: \"handleDelete\",\n    value: function handleDelete(id) {\n      this.props.deletePost(id);\n      this.props.history.push('/');\n    } //Find post that matches id in url params\n    //If no post is found redirect to NotFound page\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var post = this.props.posts.find(function (post) {\n        return post.id === _this2.props.match.params.postid;\n      });\n\n      if (!post) {\n        return React.createElement(Redirect, {\n          to: \"/notFound\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, post.postTitle), React.createElement(\"button\", {\n        //redirect to edit form\n        onClick: function onClick() {\n          return _this2.props.history.push(\"/edit/\".concat(post.id), {\n            postToEdit: post\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.handleDelete(post.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, post.postDescription), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, post.postBody), React.createElement(CommentList, {\n        addComment: this.props.addComment,\n        comments: post.comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport default Post;","map":{"version":3,"sources":["/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/Post.js"],"names":["React","Component","Redirect","CommentList","Post","props","handleDelete","bind","id","deletePost","history","push","post","posts","find","match","params","postid","postTitle","postToEdit","postDescription","postBody","addComment","comments"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;AACA;;IACMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAFiB;AAGlB,G,CAED;;;;;iCACaC,E,EAAI;AACf,WAAKH,KAAL,CAAWI,UAAX,CAAsBD,EAAtB;AACA,WAAKH,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,K,CAED;AACA;;;;6BACS;AAAA;;AACP,UAAIC,IAAI,GAAG,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,IAAjB,CACT,UAAAF,IAAI;AAAA,eAAIA,IAAI,CAACJ,EAAL,KAAY,MAAI,CAACH,KAAL,CAAWU,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxC;AAAA,OADK,CAAX;;AAIA,UAAI,CAACL,IAAL,EAAW;AACT,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACM,SAAV,CADF,EAEE;AACE;AACA,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACb,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,iBAAiCC,IAAI,CAACJ,EAAtC,GAA4C;AAC1CW,YAAAA,UAAU,EAAEP;AAD8B,WAA5C,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAYE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACN,YAAL,CAAkBM,IAAI,CAACJ,EAAvB,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAII,IAAI,CAACQ,eAAT,CAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIR,IAAI,CAACS,QAAT,CAfF,EAgBE,oBAAC,WAAD;AACE,QAAA,UAAU,EAAE,KAAKhB,KAAL,CAAWiB,UADzB;AAEE,QAAA,QAAQ,EAAEV,IAAI,CAACW,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,CADF;AAuBD;;;;EA7CgBtB,S;;AAgDnB,eAAeG,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport CommentList from './CommentList';\n\n//Actual post => displays title, description and body\n//Can edit and remove post\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  //Takes id as parameter, calls function passed down from App => redirect to homepage\n  handleDelete(id) {\n    this.props.deletePost(id);\n    this.props.history.push('/');\n  }\n\n  //Find post that matches id in url params\n  //If no post is found redirect to NotFound page\n  render() {\n    let post = this.props.posts.find(\n      post => post.id === this.props.match.params.postid\n    );\n\n    if (!post) {\n      return <Redirect to=\"/notFound\" />;\n    }\n    return (\n      <div>\n        <h1>{post.postTitle}</h1>\n        <button\n          //redirect to edit form\n          onClick={() =>\n            this.props.history.push(`/edit/${post.id}`, {\n              postToEdit: post\n            })\n          }\n        >\n          Edit\n        </button>\n        <button onClick={() => this.handleDelete(post.id)}>Delete</button>\n        <br />\n        <i>{post.postDescription}</i>\n        <p>{post.postBody}</p>\n        <CommentList\n          addComment={this.props.addComment}\n          comments={post.comments}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}