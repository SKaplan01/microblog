{"ast":null,"code":"import _classCallCheck from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/CommentList.js\";\nimport React, { Component } from 'react'; //Displays a list of comments associated with the parent Post\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentList, _Component);\n\n  function CommentList(props) {\n    var _this;\n\n    _classCallCheck(this, CommentList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentList).call(this, props));\n    _this.state = {\n      comment: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentList, [{\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState({\n        comment: evt.target.value\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete() {}\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(evt) {\n      evt.preventDefault();\n      this.props.addComment(this.state.comment, this.props.postId);\n      this.setState({\n        comment: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var comments = this.props.comments.map(function (comment) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"X\"), comment.text);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"comment\",\n        value: this.state.comment,\n        placeholder: \"New comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return CommentList;\n}(Component);\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/CommentList.js"],"names":["React","Component","CommentList","props","state","comment","handleChange","bind","handleDelete","handleSubmit","evt","setState","target","value","preventDefault","addComment","postId","comments","map","text"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;IACMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AALiB;AAMlB;;;;iCAEYG,G,EAAK;AAChB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAEK,GAAG,CAACE,MAAJ,CAAWC;AAAtB,OAAd;AACD;;;mCAEc,CAAE;;;iCAEJH,G,EAAK;AAChBA,MAAAA,GAAG,CAACI,cAAJ;AACA,WAAKX,KAAL,CAAWY,UAAX,CAAsB,KAAKX,KAAL,CAAWC,OAAjC,EAA0C,KAAKF,KAAL,CAAWa,MAArD;AACA,WAAKL,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;;;6BAEQ;AACP,UAAIY,QAAQ,GAAG,KAAKd,KAAL,CAAWc,QAAX,CAAoBC,GAApB,CAAwB,UAAAb,OAAO,EAAI;AAChD,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGA,OAAO,CAACc,IAFX,CADF;AAMD,OAPc,CAAf;AASA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKV,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AACE,QAAA,QAAQ,EAAE,KAAKH,YADjB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,OAJpB;AAKE,QAAA,WAAW,EAAC,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CAFF,CADF;AAgBD;;;;EA/CuBJ,S;;AAkD1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\n\n//Displays a list of comments associated with the parent Post\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { comment: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ comment: evt.target.value });\n  }\n\n  handleDelete() {}\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    this.props.addComment(this.state.comment, this.props.postId);\n    this.setState({ comment: '' });\n  }\n\n  render() {\n    let comments = this.props.comments.map(comment => {\n      return (\n        <li>\n          <button>X</button>\n          {comment.text}\n        </li>\n      );\n    });\n\n    return (\n      <div>\n        <ul />\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"comment\" />\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"comment\"\n            value={this.state.comment}\n            placeholder=\"New comment\"\n          />\n          <button>Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}