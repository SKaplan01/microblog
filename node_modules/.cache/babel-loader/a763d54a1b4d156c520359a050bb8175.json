{"ast":null,"code":"import _defineProperty from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/BlogForm.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FormGroup, FormText, Label, Input, Button } from 'reactstrap';\n\nvar BlogForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlogForm, _Component);\n\n  function BlogForm(props) {\n    var _this;\n\n    _classCallCheck(this, BlogForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogForm).call(this, props));\n    var post;\n\n    if (_this.props.isEdit) {\n      post = _this.props.posts.find(function (post) {\n        return post.id === _this.props.match.params.postid;\n      });\n\n      if (!post) {\n        return _possibleConstructorReturn(_this, React.createElement(Redirect, {\n          to: \"/notFound\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }));\n      }\n    }\n\n    _this.state = {\n      postTitle: '',\n      postDescription: '',\n      postBody: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BlogForm, [{\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(evt) {\n      evt.preventDefault();\n\n      if (this.props.isEdit) {\n        this.props.editPost(this.state);\n      } else {\n        this.props.addPost(this.state);\n      }\n\n      this.setState({\n        postTitle: '',\n        postDescription: '',\n        postBody: ''\n      });\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"New Post\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"postTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Title\"), React.createElement(Input, {\n        onChange: this.handleChange,\n        type: \"postTitle\",\n        name: \"postTitle\",\n        id: \"postTitle\",\n        placeholder: \"\",\n        value: this.props.isEdit ? post.postTitle : this.state.postTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"postDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        onChange: this.handleChange,\n        type: \"postDescription\",\n        name: \"postDescription\",\n        id: \"postDescription\",\n        placeholder: \"\",\n        value: this.props.isEdit ? post.postDescription : this.state.postDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"postBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Body\"), React.createElement(Input, {\n        onChange: this.handleChange,\n        type: \"postBody\",\n        name: \"postBody\",\n        id: \"postBody\",\n        placeholder: \"\",\n        value: this.props.isEdit ? post.postBody : this.state.postBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.props.history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Cancel\"));\n    }\n  }]);\n\n  return BlogForm;\n}(Component);\n\nexport default BlogForm;","map":{"version":3,"sources":["/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/BlogForm.js"],"names":["React","Component","Redirect","Form","FormGroup","FormText","Label","Input","Button","BlogForm","props","post","isEdit","posts","find","id","match","params","postid","state","postTitle","postDescription","postBody","handleChange","bind","handleSubmit","evt","setState","target","name","value","preventDefault","editPost","addPost","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FormGroup, FormText, Label, Input, Button } from 'reactstrap';\n\nclass BlogForm extends Component {\n  constructor(props) {\n    super(props);\n    let post;\n    if (this.props.isEdit) {\n      post = this.props.posts.find(\n        post => post.id === this.props.match.params.postid\n      );\n      if (!post) {\n        return <Redirect to=\"/notFound\" />;\n      }\n    }\n    this.state = {\n      postTitle: '',\n      postDescription: '',\n      postBody: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    if (this.props.isEdit) {\n      this.props.editPost(this.state);\n    } else {\n      this.props.addPost(this.state);\n    }\n    this.setState({\n      postTitle: '',\n      postDescription: '',\n      postBody: ''\n    });\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <h3>New Post</h3>\n        <FormGroup>\n          <Label for=\"postTitle\">Title</Label>\n          <Input\n            onChange={this.handleChange}\n            type=\"postTitle\"\n            name=\"postTitle\"\n            id=\"postTitle\"\n            placeholder=\"\"\n            value={this.props.isEdit ? post.postTitle : this.state.postTitle}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"postDescription\">Description</Label>\n          <Input\n            onChange={this.handleChange}\n            type=\"postDescription\"\n            name=\"postDescription\"\n            id=\"postDescription\"\n            placeholder=\"\"\n            value={\n              this.props.isEdit\n                ? post.postDescription\n                : this.state.postDescription\n            }\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"postBody\">Body</Label>\n          <Input\n            onChange={this.handleChange}\n            type=\"postBody\"\n            name=\"postBody\"\n            id=\"postBody\"\n            placeholder=\"\"\n            value={this.props.isEdit ? post.postBody : this.state.postBody}\n          />\n        </FormGroup>\n\n        <Button type=\"submit\">Submit</Button>\n        <Button onClick={() => this.props.history.push('/')}>Cancel</Button>\n      </Form>\n    );\n  }\n}\n\nexport default BlogForm;\n"]},"metadata":{},"sourceType":"module"}