{"ast":null,"code":"import _objectSpread from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/BlogForm.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nvar BlogForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlogForm, _Component);\n\n  function BlogForm(props) {\n    var _this;\n\n    _classCallCheck(this, BlogForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlogForm).call(this, props)); //declare variables that will be added to state\n    //initially are empty strings, if form is an edit form then change these variables to the props passed in location.state\n\n    var postTitle = '';\n    var postDescription = '';\n    var postBody = '';\n\n    try {\n      postTitle = _this.props.location.state.postToEdit.postTitle;\n      postDescription = _this.props.location.state.postToEdit.postDescription;\n      postBody = _this.props.location.state.postToEdit.postBody;\n    } catch (err) {}\n\n    _this.state = {\n      postTitle: postTitle,\n      postDescription: postDescription,\n      postBody: postBody\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BlogForm, [{\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    } //if prop isEdit is true then invoke function that edit posts that is passed down from app\n    //if isEdit is falsy then invoke function that add posts that is passed down from app\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(evt) {\n      evt.preventDefault();\n\n      if (this.props.isEdit) {\n        var postToEdit = _objectSpread({}, this.state, {\n          id: this.props.location.state.postToEdit.id\n        });\n\n        this.props.editPost(postToEdit);\n      } else {\n        this.props.addPost(this.state);\n      } //reset state and redirect to home when form is submitted\n\n\n      this.setState({\n        postTitle: '',\n        postDescription: '',\n        postBody: ''\n      });\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"New Post\"), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"postTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Title\"), React.createElement(Input, {\n        onChange: this.handleChange,\n        type: \"postTitle\",\n        name: \"postTitle\",\n        id: \"postTitle\",\n        placeholder: \"\",\n        value: this.state.postTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"postDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        onChange: this.handleChange,\n        type: \"postDescription\",\n        name: \"postDescription\",\n        id: \"postDescription\",\n        placeholder: \"\",\n        value: this.state.postDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"postBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Body\"), React.createElement(Input, {\n        onChange: this.handleChange,\n        type: \"postBody\",\n        name: \"postBody\",\n        id: \"postBody\",\n        placeholder: \"\",\n        value: this.state.postBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.props.history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Cancel\"));\n    }\n  }]);\n\n  return BlogForm;\n}(Component);\n\nexport default BlogForm;","map":{"version":3,"sources":["/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/BlogForm.js"],"names":["React","Component","Form","FormGroup","Label","Input","Button","BlogForm","props","postTitle","postDescription","postBody","location","state","postToEdit","err","handleChange","bind","handleSubmit","evt","setState","target","name","value","preventDefault","isEdit","id","editPost","addPost","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nclass BlogForm extends Component {\n  constructor(props) {\n    super(props);\n\n    //declare variables that will be added to state\n    //initially are empty strings, if form is an edit form then change these variables to the props passed in location.state\n    let postTitle = '';\n    let postDescription = '';\n    let postBody = '';\n\n    try {\n      postTitle = this.props.location.state.postToEdit.postTitle;\n      postDescription = this.props.location.state.postToEdit.postDescription;\n      postBody = this.props.location.state.postToEdit.postBody;\n    } catch (err) {}\n\n    this.state = {\n      postTitle,\n      postDescription,\n      postBody\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  //if prop isEdit is true then invoke function that edit posts that is passed down from app\n  //if isEdit is falsy then invoke function that add posts that is passed down from app\n  handleSubmit(evt) {\n    evt.preventDefault();\n    if (this.props.isEdit) {\n      let postToEdit = {\n        ...this.state,\n        id: this.props.location.state.postToEdit.id\n      };\n      this.props.editPost(postToEdit);\n    } else {\n      this.props.addPost(this.state);\n    }\n\n    //reset state and redirect to home when form is submitted\n    this.setState({\n      postTitle: '',\n      postDescription: '',\n      postBody: ''\n    });\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <h3>New Post</h3>\n        <FormGroup>\n          <Label for=\"postTitle\">Title</Label>\n          <Input\n            onChange={this.handleChange}\n            type=\"postTitle\"\n            name=\"postTitle\"\n            id=\"postTitle\"\n            placeholder=\"\"\n            value={this.state.postTitle}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"postDescription\">Description</Label>\n          <Input\n            onChange={this.handleChange}\n            type=\"postDescription\"\n            name=\"postDescription\"\n            id=\"postDescription\"\n            placeholder=\"\"\n            value={this.state.postDescription}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"postBody\">Body</Label>\n          <Input\n            onChange={this.handleChange}\n            type=\"postBody\"\n            name=\"postBody\"\n            id=\"postBody\"\n            placeholder=\"\"\n            value={this.state.postBody}\n          />\n        </FormGroup>\n\n        <Button type=\"submit\">Submit</Button>\n        <Button onClick={() => this.props.history.push('/')}>Cancel</Button>\n      </Form>\n    );\n  }\n}\n\nexport default BlogForm;\n"]},"metadata":{},"sourceType":"module"}