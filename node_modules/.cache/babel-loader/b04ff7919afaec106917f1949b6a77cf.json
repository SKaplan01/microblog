{"ast":null,"code":"import _objectSpread from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/App.js\";\nimport React, { Component } from 'react';\nimport Routes from './Routes';\nimport Header from './Header'; // import './App.css';\n\nimport uuid from 'uuid/v4'; //App component holds state => array of posts which are objects\n//App renders routes and header components\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      posts: []\n    };\n    _this.addPost = _this.addPost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.editPost = _this.editPost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deletePost = _this.deletePost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addComment = _this.addComment.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Add post and set state\n\n\n  _createClass(App, [{\n    key: \"addPost\",\n    value: function addPost(post) {\n      post.id = uuid();\n      this.setState(function (st) {\n        return {\n          posts: _toConsumableArray(st.posts).concat([post])\n        };\n      });\n    } //Remove post from state\n\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(id) {\n      var newPosts = this.state.posts.filter(function (post) {\n        return post.id !== id;\n      });\n      this.setState({\n        posts: newPosts\n      });\n    } //Update state with new, edited post\n\n  }, {\n    key: \"editPost\",\n    value: function editPost(post) {\n      var index = this.state.posts.findIndex(function (p) {\n        return p.id === post.id;\n      });\n      this.setState(function (st) {\n        return {\n          posts: _toConsumableArray(st.posts.slice(0, index)).concat([post], _toConsumableArray(st.posts.slice(index + 1, st.posts.length)))\n        };\n      });\n    }\n  }, {\n    key: \"addComment\",\n    value: function addComment(comment, postId) {\n      var index = this.state.posts.findIndex(function (p) {\n        return p.id === postId;\n      });\n\n      var postWithComment = _objectSpread({}, this.state.posts[index], {\n        comments: _toConsumableArray(this.state.posts[index].comments).concat([comment])\n      });\n\n      this.setState(function (st) {\n        return {\n          posts: _toConsumableArray(st.posts.slice(0, index)).concat([postWithComment], _toConsumableArray(st.posts.slice(index + 1, st.posts.length)))\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Routes, {\n        addPost: this.addPost,\n        deletePost: this.deletePost,\n        editPost: this.editPost,\n        posts: this.state.posts,\n        addComment: this.addComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/App.js"],"names":["React","Component","Routes","Header","uuid","App","props","state","posts","addPost","bind","editPost","deletePost","addComment","post","id","setState","st","newPosts","filter","index","findIndex","p","slice","length","comment","postId","postWithComment","comments"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Routes from './Routes';\nimport Header from './Header';\n// import './App.css';\nimport uuid from 'uuid/v4';\n\n//App component holds state => array of posts which are objects\n//App renders routes and header components\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [] };\n    this.addPost = this.addPost.bind(this);\n    this.editPost = this.editPost.bind(this);\n    this.deletePost = this.deletePost.bind(this);\n    this.addComment = this.addComment.bind(this);\n  }\n\n  //Add post and set state\n  addPost(post) {\n    post.id = uuid();\n    this.setState(st => ({ posts: [...st.posts, post] }));\n  }\n  //Remove post from state\n  deletePost(id) {\n    let newPosts = this.state.posts.filter(post => post.id !== id);\n    this.setState({ posts: newPosts });\n  }\n\n  //Update state with new, edited post\n  editPost(post) {\n    let index = this.state.posts.findIndex(p => p.id === post.id);\n    this.setState(st => ({\n      posts: [\n        ...st.posts.slice(0, index),\n        post,\n        ...st.posts.slice(index + 1, st.posts.length)\n      ]\n    }));\n  }\n\n  addComment(comment, postId) {\n    let index = this.state.posts.findIndex(p => p.id === postId);\n    let postWithComment = {\n      ...this.state.posts[index],\n      comments: [...this.state.posts[index].comments, comment]\n    };\n    this.setState(st => ({\n      posts: [\n        ...st.posts.slice(0, index),\n        postWithComment,\n        ...st.posts.slice(index + 1, st.posts.length)\n      ]\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Routes\n          addPost={this.addPost}\n          deletePost={this.deletePost}\n          editPost={this.editPost}\n          posts={this.state.posts}\n          addComment={this.addComment}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}