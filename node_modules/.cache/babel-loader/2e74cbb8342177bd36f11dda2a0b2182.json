{"ast":null,"code":"import _classCallCheck from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/src/Containers/Post.js\";\nimport React, { Component } from 'react';\nimport CommentList from '../Components/CommentList';\nimport NotFound from '../Components/NotFound';\nimport { connect } from 'react-redux';\nimport { deletePost, addComment, deleteComment } from '../actionCreators'; //Actual post => displays title, description and body\n//Can edit and remove post\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post(props) {\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Post).call(this, props));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //Takes id as parameter, calls function passed from Redux => redirect to homepage\n\n\n  _createClass(Post, [{\n    key: \"handleDelete\",\n    value: function handleDelete() {\n      this.props.deletePost(this.props.post.id);\n      this.props.history.push('/');\n    } //If post with this id doesn't exist, redirect to NotFound page\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        margin: '25px',\n        fontFamily: 'archivo'\n      };\n\n      if (!this.props.post) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.post.postTitle), React.createElement(\"button\", {\n        //redirect to edit form\n        onClick: function onClick() {\n          return _this2.props.history.push(\"/edit/\".concat(_this2.props.post.id));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.post.postDescription), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.post.postBody), React.createElement(CommentList, {\n        addComment: this.props.addComment,\n        deleteComment: this.props.deleteComment,\n        comments: this.props.post.comments,\n        postId: this.props.post.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Post;\n}(Component); //find post from redux store using url param\n\n\nfunction mapStateToProps(reduxState, ownProps) {\n  return {\n    post: reduxState.posts[ownProps.match.params.postid]\n  };\n}\n\nvar connectToReduxStore = connect(mapStateToProps, {\n  deletePost: deletePost,\n  addComment: addComment,\n  deleteComment: deleteComment\n});\nexport default connectToReduxStore(Post);","map":{"version":3,"sources":["/Users/sherlock/Desktop/rithm_school/react/react_microblog/microblog/frontend/src/Containers/Post.js"],"names":["React","Component","CommentList","NotFound","connect","deletePost","addComment","deleteComment","Post","props","handleDelete","bind","post","id","history","push","style","margin","fontFamily","postTitle","postDescription","postBody","comments","mapStateToProps","reduxState","ownProps","posts","match","params","postid","connectToReduxStore"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,aAAjC,QAAsD,mBAAtD,C,CAEA;AACA;;IACMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAFiB;AAGlB,G,CAED;;;;;mCACe;AACb,WAAKF,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWG,IAAX,CAAgBC,EAAtC;AACA,WAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,K,CAED;;;;6BACS;AAAA;;AACP,UAAMC,KAAK,GAAG;AACZC,QAAAA,MAAM,EAAE,MADI;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAAd;;AAIA,UAAI,CAAC,KAAKT,KAAL,CAAWG,IAAhB,EAAsB;AACpB,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE;AAAK,QAAA,KAAK,EAAEI,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKP,KAAL,CAAWG,IAAX,CAAgBO,SAArB,CADF,EAEE;AACE;AACA,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACV,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,iBAAiC,MAAI,CAACN,KAAL,CAAWG,IAAX,CAAgBC,EAAjD,EAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAQE;AAAQ,QAAA,OAAO,EAAE,KAAKH,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKD,KAAL,CAAWG,IAAX,CAAgBQ,eAApB,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKX,KAAL,CAAWG,IAAX,CAAgBS,QAApB,CAXF,EAYE,oBAAC,WAAD;AACE,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWH,UADzB;AAEE,QAAA,aAAa,EAAE,KAAKG,KAAL,CAAWF,aAF5B;AAGE,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWG,IAAX,CAAgBU,QAH5B;AAIE,QAAA,MAAM,EAAE,KAAKb,KAAL,CAAWG,IAAX,CAAgBC,EAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF;AAqBD;;;;EA1CgBZ,S,GA6CnB;;;AACA,SAASsB,eAAT,CAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;AAC7C,SAAO;AACLb,IAAAA,IAAI,EAAEY,UAAU,CAACE,KAAX,CAAiBD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,MAAvC;AADD,GAAP;AAGD;;AAED,IAAMC,mBAAmB,GAAG1B,OAAO,CACjCmB,eADiC,EAEjC;AAAElB,EAAAA,UAAU,EAAVA,UAAF;AAAcC,EAAAA,UAAU,EAAVA,UAAd;AAA0BC,EAAAA,aAAa,EAAbA;AAA1B,CAFiC,CAAnC;AAKA,eAAeuB,mBAAmB,CAACtB,IAAD,CAAlC","sourcesContent":["import React, { Component } from 'react';\nimport CommentList from '../Components/CommentList';\nimport NotFound from '../Components/NotFound';\nimport { connect } from 'react-redux';\nimport { deletePost, addComment, deleteComment } from '../actionCreators';\n\n//Actual post => displays title, description and body\n//Can edit and remove post\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  //Takes id as parameter, calls function passed from Redux => redirect to homepage\n  handleDelete() {\n    this.props.deletePost(this.props.post.id);\n    this.props.history.push('/');\n  }\n\n  //If post with this id doesn't exist, redirect to NotFound page\n  render() {\n    const style = {\n      margin: '25px',\n      fontFamily: 'archivo'\n    };\n    if (!this.props.post) {\n      return <NotFound />;\n    }\n    return (\n      <div style={style}>\n        <h1>{this.props.post.postTitle}</h1>\n        <button\n          //redirect to edit form\n          onClick={() => this.props.history.push(`/edit/${this.props.post.id}`)}\n        >\n          Edit\n        </button>\n        <button onClick={this.handleDelete}>Delete</button>\n        <br />\n        <i>{this.props.post.postDescription}</i>\n        <p>{this.props.post.postBody}</p>\n        <CommentList\n          addComment={this.props.addComment}\n          deleteComment={this.props.deleteComment}\n          comments={this.props.post.comments}\n          postId={this.props.post.id}\n        />\n      </div>\n    );\n  }\n}\n\n//find post from redux store using url param\nfunction mapStateToProps(reduxState, ownProps) {\n  return {\n    post: reduxState.posts[ownProps.match.params.postid]\n  };\n}\n\nconst connectToReduxStore = connect(\n  mapStateToProps,\n  { deletePost, addComment, deleteComment }\n);\n\nexport default connectToReduxStore(Post);\n"]},"metadata":{},"sourceType":"module"}