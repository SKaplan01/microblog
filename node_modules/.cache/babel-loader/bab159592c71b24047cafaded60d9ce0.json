{"ast":null,"code":"import _classCallCheck from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/CommentList.js\";\nimport React, { Component } from 'react';\nimport uuid from 'uuid/v4'; //Displays a list of comments associated with the parent Post\n\nvar CommentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentList, _Component);\n\n  function CommentList(props) {\n    var _this;\n\n    _classCallCheck(this, CommentList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentList).call(this, props));\n    _this.state = {\n      comment: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentList, [{\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState({\n        comment: evt.target.value\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(evt) {\n      this.props.deleteComment();\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(evt) {\n      console.log(this.props);\n      evt.preventDefault();\n      var comment = {\n        text: this.state.comment,\n        id: uuid()\n      };\n      this.props.addComment(comment, this.props.postId);\n      this.setState({\n        comment: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var comments;\n\n      if (this.props.comments) {\n        comments = this.props.comments.map(function (comment) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: function onClick() {\n              return _this2.props.deleteComment(comment.id, _this2.props.post.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"X\"), comment.text);\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, comments ? comments : ''), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"comment\",\n        value: this.state.comment,\n        placeholder: \"New comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return CommentList;\n}(Component);\n\nexport default CommentList;","map":{"version":3,"sources":["/Users/skaplan/Desktop/rithm_exercises/Week 9/microblog/src/CommentList.js"],"names":["React","Component","uuid","CommentList","props","state","comment","handleChange","bind","handleDelete","handleSubmit","evt","setState","target","value","deleteComment","console","log","preventDefault","text","id","addComment","postId","comments","map","post"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CAEA;;IACMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,uDAApB;AALiB;AAMlB;;;;iCAEYG,G,EAAK;AAChB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAEK,GAAG,CAACE,MAAJ,CAAWC;AAAtB,OAAd;AACD;;;iCAEYH,G,EAAK;AAChB,WAAKP,KAAL,CAAWW,aAAX;AACD;;;iCAEYJ,G,EAAK;AAChBK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACAO,MAAAA,GAAG,CAACO,cAAJ;AACA,UAAIZ,OAAO,GAAG;AAAEa,QAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,OAAnB;AAA4Bc,QAAAA,EAAE,EAAElB,IAAI;AAApC,OAAd;AACA,WAAKE,KAAL,CAAWiB,UAAX,CAAsBf,OAAtB,EAA+B,KAAKF,KAAL,CAAWkB,MAA1C;AACA,WAAKV,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;;;6BAEQ;AAAA;;AACP,UAAIiB,QAAJ;;AACA,UAAI,KAAKnB,KAAL,CAAWmB,QAAf,EAAyB;AACvBA,QAAAA,QAAQ,GAAG,KAAKnB,KAAL,CAAWmB,QAAX,CAAoBC,GAApB,CAAwB,UAAAlB,OAAO,EAAI;AAC5C,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,OAAO,EAAE;AAAA,qBACP,MAAI,CAACF,KAAL,CAAWW,aAAX,CAAyBT,OAAO,CAACc,EAAjC,EAAqC,MAAI,CAAChB,KAAL,CAAWqB,IAAX,CAAgBL,EAArD,CADO;AAAA,aADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAQGd,OAAO,CAACa,IARX,CADF;AAYD,SAbU,CAAX;AAcD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKI,QAAQ,GAAGA,QAAH,GAAc,EAA3B,CADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKb,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AACE,QAAA,QAAQ,EAAE,KAAKH,YADjB;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,OAJpB;AAKE,QAAA,WAAW,EAAC,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CAFF,CADF;AAgBD;;;;EA5DuBL,S;;AA+D1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid/v4';\n\n//Displays a list of comments associated with the parent Post\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { comment: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ comment: evt.target.value });\n  }\n\n  handleDelete(evt) {\n    this.props.deleteComment();\n  }\n\n  handleSubmit(evt) {\n    console.log(this.props);\n    evt.preventDefault();\n    let comment = { text: this.state.comment, id: uuid() };\n    this.props.addComment(comment, this.props.postId);\n    this.setState({ comment: '' });\n  }\n\n  render() {\n    let comments;\n    if (this.props.comments) {\n      comments = this.props.comments.map(comment => {\n        return (\n          <li>\n            <button\n              onClick={() =>\n                this.props.deleteComment(comment.id, this.props.post.id)\n              }\n            >\n              X\n            </button>\n            {comment.text}\n          </li>\n        );\n      });\n    }\n\n    return (\n      <div>\n        <ul>{comments ? comments : ''}</ul>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"comment\" />\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"comment\"\n            value={this.state.comment}\n            placeholder=\"New comment\"\n          />\n          <button>Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}